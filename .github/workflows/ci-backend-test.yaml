on:
  workflow_call:
jobs:
  Test:
    # runs-on: ubuntu-latest
    # runs-on: [self-hosted, crc]
    runs-on: [self-hosted, b2p]
    container: openjdk:17-jdk-alpine3.14
    # container: adoptopenjdk/openjdk11:jdk-11.0.11_9-alpine
    # container: openjdk:18-jdk-alpine3.15
    # container: openjdk:15-jdk-alpine3.12
    steps:
      - name: AddAPK
        run: apk --no-cache add git jq tar openssh

      - name: CheckOut
        uses: actions/checkout@v3
        with: 
          ssh-key: "${{ secrets.SSH_PRIVATE_KEY }}"
          ssh-strict: 'StrictHostKeyChecking=no'
          submodules: true   #set-safe-directory option of checkout didn't work
          fetch-depth: 0
          token: ${{ secrets.CRC_GIT_TOKEN }}

      - name: GitConfig
        run: |
          git config --global user.name ${{ secrets.CRC_GIT_USER }}
          git config --global user.email ${{ secrets.CRC_GIT_USER }}@dv.co.th
          git config --global --add safe.directory ${GITHUB_WORKSPACE}
      
      - name: GitSubmodule
        run: |
          rm -rf b2p-common
          rm -rf central-common
          git submodule add --force --name central-common https://${{ secrets.CRC_GIT_USER }}:${{ secrets.CRC_GIT_TOKEN }}@github.com/digital-ventures/crc-common central-common
          git submodule add --force --name b2p-common https://${{ secrets.B2P_GIT_USER }}:${{ secrets.B2P_GIT_TOKEN }}@github.com/digital-ventures/b2p-common b2p-common
          git submodule update --remote -f --init
          git checkout HEAD .gitmodules
        continue-on-error: true

      # - name: GitSubmodule
      #   run: |
      #     git submodule update --remote -f --init
      #     git pull --recurse-submodules
      #     git submodule update --remote --no-fetch --force
      #   continue-on-error: true

      - name: DockerLogin
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.CRC_ACR_REGISTRY }}
          username: ${{ secrets.CRC_ACR_USER }}
          password: ${{ secrets.CRC_ACR_TOKEN }}

      - name: BuildTools
        uses: yokawasa/action-setup-kube-tools@v0.7.1
        with:
          kustomize: '3.9.1' #'4.5.7'
          skaffold: '1.39.1'
          # skaffold: '1.17.2' #'1.39.1'
          helm: '3.9.4'
          kubectl: '1.17.8' #'1.20.2'
          yq: '4.7.1'

      # - name: Dump GitHub context
      #   env:
      #     GITHUB_CONTEXT: ${{ toJson(github) }}
      #   run: echo "$GITHUB_CONTEXT"

##### CodeScan
      - name: SonarQubeScan
        # if: contains(github.ref_name, 'SONAR')
        if: github.ref_type == 'tag' && contains(github.ref_name, 'SONAR')
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.CRC_SONARQUBE_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.CRC_SONARQUBE_HOST_URL }}
          LC_ALL: "en_US.UTF-8"
        with:
          projectBaseDir: src
          args: >
            -Dsonar.projectName=CRC-${{ secrets.CRC_SERVICENAME }}-${{ github.ref_name }}
            -Dsonar.projectKey=CRC-${{ secrets.CRC_SERVICENAME }}-${{ github.ref_name }}

##### Test
      # - name: CleanTest
      #   run: |
      #     echo "HELLO"

      - name: CleanTest
        if: github.ref_type != 'tag' && !(contains(github.ref_name, 'SONAR'))
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 7.2
          arguments: |
              clean test
